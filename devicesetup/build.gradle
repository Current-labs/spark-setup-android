apply plugin: 'com.android.library'
apply plugin: 'com.jakewharton.butterknife'

// This is the library version used when deploying the artifact
version = '0.5.2'

ext {
    bintrayRepo = 'android'
    bintrayName = 'devicesetup'
    bintrayOrg = 'particle'

    publishedGroupId = 'io.particle'
    libraryName = 'Particle (formerly Spark) Android Device Setup library'
    artifact = 'devicesetup'

    libraryDescription = "The Particle Device Setup library provides everything you need to " +
            "offer your users a simple initial setup process for Particle-powered devices.  This " +
            "includes all the necessary device communication code, an easily customizable UI, and " +
            "a simple developer API."

    siteUrl = 'https://github.com/spark/spark-setup-android'
    gitUrl = 'https://github.com/spark/spark-setup-android.git'

    libraryVersion = project.version

    developerId = 'idok'
    developerName = 'Ido Kleinman'
    developerEmail = 'ido@particle.io'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}


android {
    compileSdkVersion 29

    dexOptions {
        javaMaxHeapSize "2g"
    }

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        // Enabling multidex support.
        multiDexEnabled true
    }

    compileOptions {
        incremental false
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError true
    }

}

// TESTING ONLY: to build against a locally built version of the cloud SDK, uncomment these
// lines, and the "compile(name:'cloudsdk', ext:'aar')" line below under dependencies.
// (If you don't know what this means or why we (the SDK maintainers at Particle) would want to
// do this, then you can safely ignore all this and keep it commented out. :)
//repositories {
//    flatDir {
//        dirs 'libs'
//    }
//}


dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation 'io.particle:cloudsdk:0.4.8'

    implementation 'com.squareup.phrase:phrase:1.0.3'
    implementation 'io.github.inflationx:calligraphy3:3.1.1'
    implementation 'io.github.inflationx:viewpump:2.0.3'
    implementation 'com.segment.analytics.android:analytics:4.2.6'
    implementation 'com.madgag.spongycastle:core:1.58.0.0'

    implementation 'com.google.dagger:dagger:2.24'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.24'
    implementation 'com.jakewharton:butterknife:10.2.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.1'

    //Multidex
    implementation 'androidx.multidex:multidex:2.0.1'

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'

    // For ESP32 setup
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'

    // TESTING ONLY (see other TESTING comments further up)
//    compile(name: 'cloudsdk', ext: 'aar')
}

apply from: '../pom_generator_v1.gradle'
apply from: '../bintray_upload_v1.gradle'

// disable insane, build-breaking doclint tool in Java 8
if (JavaVersion.current().isJava8Compatible()) {
    tasks.withType(Javadoc) {
        //noinspection SpellCheckingInspection
        options.addStringOption('Xdoclint:none', '-quiet')
    }
}
